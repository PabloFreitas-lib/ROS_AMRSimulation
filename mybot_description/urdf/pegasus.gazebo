<?xml version="1.0"?>

<robot name="pegasus_sim" xmlns:xacro="http://ros.org/wiki/xacro">


	  <gazebo reference="pegasus_wheel_right_link">
	    <mu1>1.0</mu1>
	    <mu2>1.0</mu2>
	    <kp>1000000.0</kp>
	    <kd>100.0</kd>
	    <minDepth>0.001</minDepth>
	    <maxVel>1.0</maxVel>
	  </gazebo>

	  <gazebo reference="pegasus_caster_front_link">
	    <mu1>0.0</mu1>
	    <mu2>0.0</mu2>
	    <kp>1000000.0</kp>
	    <kd>100.0</kd>
	    <minDepth>0.001</minDepth>
	    <maxVel>1.0</maxVel>
	  </gazebo>

	  <gazebo reference="pegasus_caster_back_link">
	    <mu1>0.0</mu1>
	    <mu2>0.0</mu2>
	    <kp>1000000.0</kp>
	    <kd>100.0</kd>
	    <minDepth>0.001</minDepth>
	    <maxVel>1.0</maxVel>
	  </gazebo>

	  <gazebo reference="base_link">
	    <mu1>0.3</mu1>
	    <mu2>0.3</mu2>
	    <sensor type="contact" name="bumpers">
	      <always_on>1</always_on>
	      <update_rate>50.0</update_rate>
	      <visualize>true</visualize>
	      <contact>
	        <collision>base_footprint_collision_base_link</collision>
	      </contact>
	    </sensor>
	  </gazebo>



	  <gazebo reference="gyro_link">
	   <sensor type="imu" name="imu">
        <always_on>true</always_on>
        <update_rate>50</update_rate>
        <visualize>false</visualize>
        <imu>
          <noise>
            <type>gaussian</type>
	          <rate>
	            <mean>0.0</mean>
	            <stddev>${0.0014*0.0014}</stddev> <!-- 0.25 x 0.25 (deg/s) -->
	            <bias_mean>0.0</bias_mean>
	            <bias_stddev>0.0</bias_stddev>
	          </rate>
		        <accel> <!-- not used in the plugin and real robot, hence using tutorial values -->
			        <mean>0.0</mean>
			        <stddev>1.7e-2</stddev>
			        <bias_mean>0.1</bias_mean>
			        <bias_stddev>0.001</bias_stddev>
		        </accel>
          </noise>
	      </imu>
      </sensor>
	  </gazebo>

	  <!--gazebo>
	    <plugin name="kobuki_controller" filename="libgazebo_ros_kobuki.so">
	      <publish_tf>1</publish_tf>
	      <left_wheel_joint_name>wheel_left_joint</left_wheel_joint_name>
	      <right_wheel_joint_name>wheel_right_joint</right_wheel_joint_name>
	      <wheel_separation>.30</wheel_separation>
	      <wheel_diameter>0.09</wheel_diameter>
	      <torque>18.0</torque>
	      <velocity_command_timeout>0.6</velocity_command_timeout>
	      <cliff_sensor_left_name>cliff_sensor_left</cliff_sensor_left_name>
	      <cliff_sensor_center_name>cliff_sensor_front</cliff_sensor_center_name>
	      <cliff_sensor_right_name>cliff_sensor_right</cliff_sensor_right_name>
	      <cliff_detection_threshold>0.04</cliff_detection_threshold>
	      <bumper_name>bumpers</bumper_name>
        <imu_name>imu</imu_name>
	    </plugin>
	  </gazebo-->

<!-- Importing data from agvs_gazebo file-->

<!-- ros_control plugin -->
<gazebo>
  <plugin name="ros_control" filename="libgazebo_ros_control.so">
     <robotNamespace>/pegasus</robotNamespace>
     <controlPeriod>0.001</controlPeriod>
   <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
  </plugin>
</gazebo>

<gazebo reference="base_footprint">
  <material>Gazebo/Green</material>
</gazebo>

<gazebo reference="base_link">
  <material>Gazebo/Red</material>
</gazebo>

<gazebo reference="caster_collision">
  <mu1 value="1.0"/>
  <mu2 value="1.0"/>
  <fdir1 value="0 0 0"/>
  <kp value="1000000000.0"/>
  <kd value="1.0" />
  <material>Gazebo/Grey</material>
</gazebo>

<gazebo reference="caster_front_collision">
  <mu1 value="1.0"/>
  <mu2 value="1.0"/>
  <fdir1 value="0 0 0"/>
  <kp value="1000000000.0"/>
  <kd value="1.0" />
  <material>Gazebo/Grey</material>
</gazebo>

<gazebo reference="front_motor_wheel">
  <material>Gazebo/Blue</material>
</gazebo>

<gazebo reference="back_motor_wheel">
  <material>Gazebo/Blue</material>
</gazebo>

<gazebo reference="side_wheel_right">
  <mu1 value="1.0"/>
  <mu2 value="1.0"/>
  <fdir1 value="0 0 0"/>
  <!-- kp value="1000000.0"/>
  <kd value="1.0" / -->
  <!-- value ok for 25kg robot mass -->
  <!-- kp value="10000.0"/>
  <kd value="1.0" / -->
  <kp value="1000000000.0"/>
  <kd value="1.0"/>
  <material>Gazebo/Grey</material>
</gazebo>

<gazebo reference="side_wheel_left">
  <mu1 value="1.0"/> <!-- 2.0 -->
  <mu2 value="1.0"/> <!-- 0.5 -->
  <kp value="1000000000.0"/>
  <kd value="1.0"/>
  <fdir1 value="0 0 0"/>
  <material>Gazebo/Grey</material>
</gazebo>

<gazebo reference="elevator_link">
  <material>Gazebo/Grey</material>
  <kp value="1000000000.0"/>
  <kd value="1.0"/>
</gazebo>

<!-- sick laser -->
<gazebo reference="laser_front">
  <!-- sensor type="gpu_ray" name="head_hokuyo_sensor" -->
  <sensor type="ray" name="front_sick_sensor">
    <pose>0 0 0 0 0 0</pose>
    <visualize>false</visualize>
    <update_rate>30</update_rate>
    <ray>
      <scan>
        <horizontal>
          <samples>720</samples>
          <resolution>1</resolution>
          <min_angle>-1.570796</min_angle>
          <max_angle>1.570796</max_angle>
         <!--samples>1081</samples>
         <resolution>1</resolution>
         <min_angle>2.35619449</min_angle>
         <max_angle>-2.35619449</max_angle -->
        </horizontal>
      </scan>
      <range>
        <min>0.10</min>
        <max>10.0</max>
        <resolution>0.01</resolution>
      </range>
      <noise>
        <type>gaussian</type>
        <mean>0.0</mean>
        <stddev>0.01</stddev>
      </noise>
    </ray>
    <!-- plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_gpu_laser.so" -->
    <plugin name="gazebo_ros_front_sick_controller" filename="libgazebo_ros_laser.so">
      <topicName>/scan</topicName>
      <frameName>laser_front</frameName>
    </plugin>
  </sensor>
</gazebo>


<gazebo>
  <plugin name="ros_imu" filename="libgazebo_ros_imu.so">
     <robotNamespace>/agvs</robotNamespace>
     <topicName>imu_data</topicName>
  <bodyName>imu_link </bodyName>
  <serviceName>/imu_service</serviceName>
      <gaussianNoise>0.005</gaussianNoise>
  </plugin>
</gazebo>

</robot>
